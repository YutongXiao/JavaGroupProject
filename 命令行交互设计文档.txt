命令行交互设计文档

在命令行中：
-首先输入javac CommandLine.java实现对CommandLine文件的编译
- 输入java CommandLine XXX 通过main函数参数String[] args 实现命令交互
	-XXX主要为三个命令
	-git commit "description"	解析args[0]是否为git arg[1]为commit则调用gitCommit(args[2])
	-git branch branchname	解析args[0]是否为git arg[1]为branch则调用gitBranch(args[2])
	-git reset 哈希码		解析args[0]是否为git arg[1]为reset则调用gitReset(args[2])

代码设计：
CommandLine类：
-main(String[] args)：读取用户在命令行的输入
	-判断长度 可接受长度为3或2
	-分段取词，第一词为git继续读取，非git输出“非法输入”
	-按第二词调用函数,并将第三词（若有）作为参数传入

-gitCommit(String description)：将当前HEAD指向branch更新一个Commit，并将参数中的描述存储到commit key-value文件第一行（或最后一行中？）

-gitBranch(String branchName)：运用HEAD类中checkoutBranch()方法，在branch文件中找到为参数名的branch，并将HEAD指向它。若无此branch则以参数名为名新建一个branch对象，更新HEAD指针到此对象，返回“At branchName”

-gitReset(String hash)：用户输入5-40位的特定commit哈希码，系统通过回滚方法resetCommit()恢复指定commit的文件内容，返回“At 'commit hash'”


其他可能设计命令：
	-git log 			解析args[0]是否为git arg[1]为log则调用gitLog()
	-gitLog()：返回所有的commit历史或当前分支commit历史-待决定，每个commit包括哈希+描述